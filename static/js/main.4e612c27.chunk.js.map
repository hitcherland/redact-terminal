{"version":3,"sources":["audio/harddrive.mp3","monitor.js","os.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Monitor","props","yieldText","this","corruptText","c","monitor","React","createRef","canvas","overlay","renderDisplay","resizeListenerID","window","addEventListener","forceUpdate","flicker","corrupt","removeEventListener","clearInterval","overlayClock","String","fromCharCode","charCodeAt","Math","floor","random","f","flickerStrength","opacity","current","style","nextFlicker","flickerTimeoutDuration","setTimeout","nextCorrupt","corruptTimeoutDuration","input","ctx","getContext","text","children","innerHTML","width","corruptFunc","terminal","character","height","fontSize","font","fillStyle","corruptType","wiggle","trueRandom","x","next","value","split","forEach","line","i","j","string","hash","length","hashString","Date","corruptStrength","call","offset","measureText","fillText","innerWidth","aspectRatio","innerHeight","vMargin","hMargin","margin","monitorClass","bg","fg","ref","className","cloneElement","render","bind","transitionDuration","Component","defaultProps","lineHeight","Fallback","regexes","regex","matches","matchAll","RegExp","matchset","match","replace","repeat","OS","state","old_text","new_text","data","settings","logo","stack","path","selected","fallback","default_layout","default","s","undefined","concat","lines","push","map","substr","toLength","join","index","new_stack_item","new_selected","splice","name","setState","transition","shift","pop","direction","stack_item","parent_item","findIndex","X","l","active","listener","e","key","pushStack","popStack","adjustSelection","horizontalStack","controls","content","controls_regex","time","toLocaleString","time_regex","layout","getRegexes","item","child","applyRegex","applyLayout","applyControls","applyTime","max","order","durationTime","transitionID","setInterval","old_char","new_char","App","audio","sessions","listen_func","play","volume","Object","keys","listeners","src","harddrive_noise","preload","loop","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e612c27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/harddrive.f6579154.mp3\";","import React from 'react';\nimport './monitor.css';\n\nfunction hashString(string) {\n  var hash = 0, i, chr;\n  if (string.length === 0) return hash;\n  for (i = 0; i < string.length; i++) {\n    chr   = string.charCodeAt(i);\n    hash  = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n\nclass Monitor extends React.Component {\n    constructor(props) {\n        super(props)\n        this.monitor = React.createRef();\n        this.canvas = React.createRef();\n        this.overlay = React.createRef();\n    }\n\n    componentDidMount() {\n        this.renderDisplay();\n        this.resizeListenerID = window.addEventListener('resize', () => {\n            this.forceUpdate();\n            this.renderDisplay();\n        });\n\n        this.flicker();\n        this.corrupt();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resizeListenerID);\n        window.clearInterval(this.overlayClock);\n    } \n\n    wiggle(c) {\n        var count = 65; //400 * this.props.corruptStrength;\n        return String.fromCharCode(\n            c.charCodeAt(0) + Math.floor(Math.random() * 2 * count - count )\n        )\n    }\n\n    trueRandom() {\n        return String.fromCharCode(10000 * Math.random());\n    }\n\n    yieldText = function*() {\n        while(true) {\n            for(let c of this.props.corruptText) {\n                yield c;\n            }\n        }\n    }\n\n\n    flicker() {\n        var f = this.props.flickerStrength;\n        var opacity = (1 - f) + f * Math.random();\n        this.canvas.current.style.opacity = opacity\n        this.monitor.current.style.opacity = opacity;\n\n        var nextFlicker = this.props.flickerTimeoutDuration * (0.5 + Math.random());\n        window.setTimeout(() => {\n            this.flicker();\n        }, nextFlicker);\n    }\n\n    corrupt() {\n        var nextCorrupt = this.props.corruptTimeoutDuration * (0.5 + Math.random());\n        this.renderDisplay();\n        window.setTimeout(() => {\n            this.corrupt();\n        }, nextCorrupt);\n    }\n\n    renderDisplay(input) {\n        if(this.canvas === null || this.canvas.current === null)\n            return;\n\n        var canvas = this.canvas.current;\n        var ctx = canvas.getContext('2d');\n        var text = canvas.children[0].innerHTML;\n\n        canvas.width = canvas.width * 1.0;\n\n        var terminal = this.props.terminal;\n        var character = {\n            width: this.width / terminal.width,\n            height: this.height / terminal.height\n        };\n        var fontSize = character.height;\n\n        ctx.font = `${fontSize}px monospace`\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.5)\"\n\n        var corruptFunc;\n        switch(this.props.corruptType) {\n            case \"wiggle\":\n                corruptFunc = this.wiggle;\n                break\n            case \"random\":\n                corruptFunc = this.trueRandom;\n                break\n            case \"text\":\n                var x = this.yieldText()\n                corruptFunc = () => x.next().value;\n                break\n\n            default:\n                corruptFunc = this.wiggle;\n        }\n\n        text.split('\\n').forEach((line, i) => {\n            line.split(\"\").forEach((c, j) => {\n                var hash = hashString(`${i},${j},${new Date()}`)\n                if(hash % Math.floor(1 / this.props.corruptStrength) === 0) {\n                    c = corruptFunc.call(this, c);\n                }\n                var offset = (character.width - ctx.measureText(c).width) / 2;\n                ctx.fillText(c, j * character.width + offset,\n                             (i + 1) * character.height);\n            })\n        })\n\n    }\n\n    render() {\n        var width, height;\n        if(window.innerWidth * this.props.aspectRatio >= window.innerHeight) {\n            width = Math.floor(window.innerHeight * this.props.aspectRatio);\n            height = window.innerHeight;\n        } else {\n            width = window.innerWidth;\n            height = Math.floor(window.innerWidth / this.props.aspectRatio);\n        }\n\n        var vMargin = (window.innerHeight - height) / 2;\n        var hMargin = (window.innerWidth - width) / 2;\n        this.width = width;\n        this.height = height;\n\n        var style = {\n            width: width + \"px\",\n            height: height + \"px\",\n            margin: vMargin + \"px \" + hMargin + \"px\",\n        };\n\n        this.renderDisplay();\n\n        var monitorClass = `monitor bg-${this.props.bg} fg-${this.props.fg}`;\n        var displayClass = \"display\";\n        var overlayClass = \"overlay\"\n        return (<div ref={this.monitor} style={style} className={monitorClass}>\n            <canvas className={displayClass}\n                    ref={this.canvas}\n                    width={width}\n                    height={height}>\n                {React.cloneElement(this.props.children, {\n                    render: this.renderDisplay.bind(this),\n                    transitionDuration: this.props.transitionDuration,\n\n                })}\n            </canvas>\n            <div className={overlayClass}/>\n        </div>)\n    }\n}\n\nMonitor.defaultProps = {\n    fg: \"green\",\n    bg: \"black\",\n    aspectRatio: 20 / 20,\n    terminal: {\n        width: 80,\n        height: 43,\n        lineHeight: 1.6,\n    },\n    flickerStrength: 0.1,\n    flickerTimeoutDuration: 200, // flicker between 0.5 and 1.5 of this \n    corruptType: \"wiggle\",\n    corruptStrength: 0.001,\n    corruptText: \"help me  \",\n    corruptTimeoutDuration: 800, // corrupt between 0.5 and 1.5 of this \n    transitionDuration: 500,\n}\n\nexport default Monitor \n","import React from 'react';\n\nclass Fallback extends React.Component {\n    constructor(props) {\n        super(props)\n        this.text = \"\";\n    }\n\n    render() {\n        var regexes = this.props.regexes;\n        var text = this.props.children;\n        for(var regex of regexes) {\n            var matches = text.matchAll(new RegExp(regex, 'g'));\n            for(var matchset of matches) {\n                for(var match of matchset) {\n                    text = text.replace(match, '█'.repeat(match.length));\n                }\n            }\n        } \n        this.text = text;\n\n        return <pre>{text}</pre>\n    }\n}\n\nFallback.defaultProps = {\n    regexes: []\n}\n\nclass OS extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            old_text: \"\",\n            new_text: \"\",\n            text: this.props.data.settings.logo,\n            stack: [this.props.data],\n            path: [this.props.data['name']],\n            selected: 0,\n        }\n        this.fallback = React.createRef();\n        this.default_layout = this.props.data.settings.default\n    }\n\n    getRegexes() {\n        var regexes = [];\n        for(let s of this.state.stack) {\n            if(s.settings !== undefined && s.settings.regex !== undefined) {\n                regexes = regexes.concat(s.settings.regex.split('\\n'))\n            }\n        }\n        return regexes;\n    }\n\n    fixSize(string, width, height) {\n        function toLength(string, length) {\n            if(string.length < length) {\n                return string + ' '.repeat(length - string.length);\n            } else {\n                return string.substr(0, length);\n            }\n        }\n\n\n        var lines = string.split('\\n');\n        if(lines.length < height) {\n            for(let i=lines.length; i<height; i++) {\n                lines.push('')\n            }\n        }\n\n        return lines.map(x => toLength(x, width)).join('\\n');\n    }\n\n    pushStack(index) {\n        var stack = this.state.stack;\n        var path = this.state.path;\n        if(stack[0].children === undefined)\n            return\n\n        var new_stack_item = stack[0].children[index];\n        var new_selected = undefined;\n        if(new_stack_item.children !== undefined) {\n            new_selected = 0;\n        }\n\n        stack.splice(0, 0, new_stack_item);\n        path.push(new_stack_item.name);\n        this.setState({\n            stack: stack,\n            path: path,\n            selected: new_selected,\n        }, () => this.transition())\n    }\n\n    popStack() {\n        var stack = this.state.stack;\n        var path = this.state.path;\n\n        if(stack.length === 1)\n            return;\n\n        var new_selected = 0;\n        stack.shift()\n        path.pop();\n        this.setState({\n            stack: stack,\n            path: path,\n            selected: new_selected,\n        }, () => this.transition())\n    }\n\n    horizontalStack(direction) {\n        var stack = this.state.stack; \n        var path = this.state.path; \n\n        var stack_item = stack[0];\n        var parent_item = stack[1];\n        if(parent_item === undefined || parent_item.children.length === 1)\n            return;\n\n        var index = (parent_item.children || []).findIndex(X => X === stack_item);\n        var l = parent_item.children.length;\n        index = (index + direction + l) % l;\n\n        var new_stack_item = parent_item.children[index];\n        var new_selected = undefined;\n        if(new_stack_item.children !== undefined) {\n            new_selected = 0;\n        }\n\n        stack.splice(0, 1, new_stack_item);\n        path.splice(-1, 1, new_stack_item.name);\n\n        this.setState({\n            stack: stack,\n            path: path,\n            selected: new_selected,\n        }, () => this.transition())\n    }\n\n    adjustSelection(direction) {\n        var selected = this.state.selected;\n        var active = this.state.stack[0];\n        if(active.children === undefined)\n            return\n\n        var l = active.children.length;\n        var new_selected = (selected + direction + l) % l;\n\n        this.setState({\n            selected: new_selected,\n        }, () => this.transition())\n    }\n\n    componentDidMount() {\n        this.transition(1500);\n\n        this.listener = window.addEventListener('keydown', (e) => {\n            switch(e.key) {\n                case 'Enter':\n                    this.pushStack(this.state.selected);\n                    break\n                case 'Escape':\n                    this.popStack();\n                    break; \n                case 'ArrowUp':\n                    this.adjustSelection(-1);\n                    break; \n                case 'ArrowLeft':\n                    this.horizontalStack(-1);\n                    break; \n                case 'ArrowRight':\n                    this.horizontalStack(+1);\n                    break; \n                case 'ArrowDown':\n                    this.adjustSelection(+1);\n                    break; \n                default:\n                    break;\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.listener);\n    }\n\n    applyControls(text) {\n        var item = this.state.stack[0];\n        var controls = []\n        if(item.content === undefined) {\n            controls.push('↑/↓/Enter - Up/Down/Select')\n        }\n\n        if(this.state.stack.length > 1) {\n            if(this.state.stack[1].children.length > 1) {\n                controls.push('←/→ - Prev/Next')\n            }\n            \n            controls.push('Esc - Back')\n        }\n\n        controls = controls.join(', ')\n        var offset = controls.length - 10;\n        var controls_regex = new RegExp(`{controls}.{${offset}}`)\n        text = text.replace(controls_regex, controls) \n        return text;\n    }\n\n    applyTime(text) {\n        var time = new Date().toLocaleString()\n        var offset = time.length - 12; \n        var time_regex = new RegExp(`.{${offset}}{local_time}`)\n        text = text.replace(time_regex, time) \n        return text;\n    }\n\n    applyLayout(text) {\n        var layout = this.default_layout\n        text.split('\\n').forEach((line) => {\n            let l = line.length;\n            let matches = layout.match(/\\u007F{4,}/m); \n            if(matches === null)\n                return;\n\n            let match = matches[0];\n            if(match.length > l) {\n                line += \" \".repeat(match.length - l)\n                l = match.length;\n            }\n\n            layout = layout.replace(new RegExp(`\\u007F{${l}}`), line);\n        });\n\n        var matches = layout.match(/X{4,}/m);\n        while(matches !== null) {\n            let match = matches[0];\n            layout = layout.replace(match, \" \".repeat(match.length));\n            matches = layout.match(/X{4,}/m);\n        }\n        return layout;\n    }\n\n    applyRegex(text) {\n        var regexes = this.getRegexes()\n        for(var regex of regexes) {\n            var matches = text.matchAll(new RegExp(regex, 'g'));\n            for(var matchset of matches) {\n                for(var match of matchset) {\n                    text = text.replace(match, '█'.repeat(match.length));\n                }\n            }\n        } \n        return text;\n    }\n\n    transition() {\n        var item = this.state.stack[0];\n        var text = item.content;\n\n        if(text === undefined) {\n            text = `\\n  Directory Listing: ${this.state.path.join('/')}\\n\\n`;\n            for(let i=0; i<item.children.length; i++) {\n                let child = item.children[i];\n                if(this.state.selected === i) {\n                    text += '    [*] ' + child.name + '\\n';\n                } else {\n                    text += '     *  ' + child.name + '\\n';\n                }\n            }\n        }\n\n        text = this.applyRegex(text)\n        text = this.applyLayout(text);\n        text = this.applyControls(text);\n        text = this.applyTime(text);\n\n        this.setState({\n            'old_text': this.state.text,\n            'new_text': text,\n        })\n\n        var l = Math.max(this.state.text.length, text.length)\n        var order = [];\n\n        for(let i=0; i<l; i++) {\n            let key = i * this.props.transitionDuration / l;\n            if(this.state.old_text[i] === '\\n' || this.state.new_text[i] === '\\n') {\n                key = 0\n            }\n            order.push(key)\n        }\n\n        this.durationTime = 0;\n        var tSpeed = 10;\n        this.transitionID = window.setInterval(() => {\n            this.durationTime += tSpeed;\n            if(this.durationTime > this.props.transitionDuration) {\n                window.clearInterval(this.transitionID);\n            }\n\n            let text = '';\n            for(var i=0; i<l; i++) {\n                var old_char = this.state.old_text[i] !== undefined ? this.state.old_text[i] : \" \";\n                var new_char = this.state.new_text[i] !== undefined ? this.state.new_text[i] : \" \";\n\n                if(order[i] <= this.durationTime) {\n                    text += new_char;\n                } else {\n                    text += old_char;\n                }\n            }\n            \n            this.setState({text: text}, () => {this.props.render()});\n        }, tSpeed);\n\n    }\n\n    render() {\n        return <Fallback ref={this.fallback}>\n            {this.state.text}\n        </Fallback>;\n    }\n}\n\nOS.defaultProps = {\n    transitionDuration: 500,\n    render: () => {},\n}\n\nexport default OS\n","import React from 'react';\nimport './App.css';\nimport harddrive_noise from './audio/harddrive.mp3';\nimport sessions from './sessions.json';\nimport Monitor from './monitor';\nimport OS from './os';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audio = React.createRef();\n        this.state = {\n            active: false,\n            stack: [sessions],\n        }\n    }\n\n    componentDidMount() {\n        var listen_func = () => {\n            if(this.audio === null || this.audio.current === null)\n                return;\n\n            this.audio.current.play();\n            this.audio.current.volume = 0.2;\n            this.setState({'active': true});\n            for(var key of Object.keys(this.listeners)) {\n                window.removeEventListener(key, this.listeners[key]);\n            }\n        }\n\n        this.listeners = {\n            'click': window.addEventListener('click', listen_func),\n            'keydown': window.addEventListener('keydown', listen_func),\n        }\n    }\n    \n    render() {\n        return (\n        <div className=\"App\">\n            <audio ref={this.audio} src={harddrive_noise} preload=\"auto\" loop></audio>\n            <Monitor fg=\"green\" bg=\"black\">\n                <OS data={sessions}/>\n            </Monitor>\n        </div>\n        );\n    }\n}\n\n            /*\n          <div className=\"overlay\">\n              <FileSystem data={sessions}/>\n          </div>\n          */\n\n\n//<Monitor aspectRatio={4/3} terminal={{width: 80, height: 43}}>\n//  <OS type=\"simple\"/>\n//      <Filesystem data={sessions}/>\n//  </OS\n//</Monitor>\n\n//<Terminal termWidth={80} termHeight={43} content={sample_file} />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}